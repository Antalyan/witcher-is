@page "/PersonalInfo"
@attribute [Authorize]
@using WitcherProject.BL.Services.Interfaces
@using WitcherProject.BL.DTOs.Person
@inject AuthenticationStateProvider AuthenticationStateProvider
@using WitcherProject.PresentationLayer.Pages.Administration

@inject IPersonService PersonService

<h3>PersonalInfo</h3>

@if (authenticatedPerson == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <EditFormComponent person="authenticatedPerson" personEditError="@authError"/>
}

@code {
    
    private PersonCompleteDto authenticatedPerson;

    private string authError;
    
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var authUser = authState.User.Identity.Name;
        try
        {
            authenticatedPerson = await PersonService.GetPersonByLogin(authUser);
        }
        catch (Exception e)
        {
            authError = e.Message;
        }

    }
}