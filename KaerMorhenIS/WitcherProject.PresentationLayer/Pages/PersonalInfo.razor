@page "/PersonalInfo"
@using WitcherProject.BL.Services.Interfaces
@using WitcherProject.BL.DTOs.Person
@using Mapster;

@inject IPersonService PersonService

<h3>PersonalInfo</h3>

@if (person == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <EditForm Model="@person" OnValidSubmit="UpdatePersonalData">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        @* <div class="d-flex flex-column bd-highlight mb-3"> *@
        @*     <div> *@
        @*         <InputText p-2 mb-2 @bind-Value="@person.Login" readonly="true"></InputText> *@
        @*     </div> *@
        @*     <InputText class="p-2 mb-2" @bind-Value="@person.Login" readonly="true"></InputText> *@
        @*     <InputText class="p-2 mb-2"  @bind-Value="@person.Name"></InputText> *@
        @*     <InputText class="p-2 mb-2" @bind-Value="@person.Surname"></InputText> *@
        @*     <InputTextArea class="p-2 mb-2" @bind-Value="@person.Cv"></InputTextArea> *@
        @*     <InputDate class="p-2 mb-2" @bind-Value="@person.Birthdate"></InputDate> *@
        @* </div> *@

        <div>
            <label class="form-label">
                Login: <InputText class="form-control" @bind-Value="@person.Login" DisplayName="login" readonly="true"></InputText>
            </label>
        </div>
        <div>
            <label class="form-label">
                Name: <InputText class="form-control" @bind-Value="@person.Name" DisplayName="name"></InputText>
            </label>
        </div>
        <div>
            <label class="form-label">
                Surname: <InputText class="form-control" @bind-Value="@person.Surname" DisplayName="surname"></InputText>
            </label>
        </div>
        <div>
            <label class="form-label">
                Cv: <InputTextArea class="form-control" @bind-Value="@person.Cv" DisplayName="cv"></InputTextArea>
            </label>
        </div>
        <div>
            <label class="form-label">
                Birthdate: <InputDate class="form-control" @bind-Value="@person.Birthdate" DisplayName="birthdate"></InputDate>
            </label>
        </div>
        <button class="btn btn-primary" type="submit">Edit</button>
    </EditForm>
}

@code {
    private PersonCompleteDto person;

    protected override async Task OnInitializedAsync()
    {
    //TODO: replace by real id of logged in person
        person = await PersonService.GetPersonById(1);
    }

    private async Task UpdatePersonalData()
    {
        await PersonService.UpdateUserAsync(person.Adapt<PersonUpdateDto>());
    }
}